#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PLD.DataAccess.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbSmartPLD")]
	public partial class CatalogosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Inserttbl_CAT_Estado(tbl_CAT_Estado instance);
    partial void Updatetbl_CAT_Estado(tbl_CAT_Estado instance);
    partial void Deletetbl_CAT_Estado(tbl_CAT_Estado instance);
    partial void Inserttbl_CAT_Actividad(tbl_CAT_Actividad instance);
    partial void Updatetbl_CAT_Actividad(tbl_CAT_Actividad instance);
    partial void Deletetbl_CAT_Actividad(tbl_CAT_Actividad instance);
    partial void Inserttbl_CAT_Localidades(tbl_CAT_Localidades instance);
    partial void Updatetbl_CAT_Localidades(tbl_CAT_Localidades instance);
    partial void Deletetbl_CAT_Localidades(tbl_CAT_Localidades instance);
    partial void Inserttbl_CAT_Moneda(tbl_CAT_Moneda instance);
    partial void Updatetbl_CAT_Moneda(tbl_CAT_Moneda instance);
    partial void Deletetbl_CAT_Moneda(tbl_CAT_Moneda instance);
    partial void Inserttbl_CAT_Nacionalidad(tbl_CAT_Nacionalidad instance);
    partial void Updatetbl_CAT_Nacionalidad(tbl_CAT_Nacionalidad instance);
    partial void Deletetbl_CAT_Nacionalidad(tbl_CAT_Nacionalidad instance);
    partial void Inserttbl_CAT_TipoDomicilio(tbl_CAT_TipoDomicilio instance);
    partial void Updatetbl_CAT_TipoDomicilio(tbl_CAT_TipoDomicilio instance);
    partial void Deletetbl_CAT_TipoDomicilio(tbl_CAT_TipoDomicilio instance);
    partial void Inserttbl_CAT_TipoPersona(tbl_CAT_TipoPersona instance);
    partial void Updatetbl_CAT_TipoPersona(tbl_CAT_TipoPersona instance);
    partial void Deletetbl_CAT_TipoPersona(tbl_CAT_TipoPersona instance);
    partial void Inserttbl_CAT_EstuausSeguimiento(tbl_CAT_EstuausSeguimiento instance);
    partial void Updatetbl_CAT_EstuausSeguimiento(tbl_CAT_EstuausSeguimiento instance);
    partial void Deletetbl_CAT_EstuausSeguimiento(tbl_CAT_EstuausSeguimiento instance);
    partial void Inserttbl_CAT_TipoProducto(tbl_CAT_TipoProducto instance);
    partial void Updatetbl_CAT_TipoProducto(tbl_CAT_TipoProducto instance);
    partial void Deletetbl_CAT_TipoProducto(tbl_CAT_TipoProducto instance);
    #endregion
		
		public CatalogosDataContext() : 
				base(global::PLD.DataAccess.Properties.Settings.Default.dbSmartPLDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_CAT_Estado> tbl_CAT_Estado
		{
			get
			{
				return this.GetTable<tbl_CAT_Estado>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_Actividad> tbl_CAT_Actividad
		{
			get
			{
				return this.GetTable<tbl_CAT_Actividad>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_Localidades> tbl_CAT_Localidades
		{
			get
			{
				return this.GetTable<tbl_CAT_Localidades>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_Moneda> tbl_CAT_Moneda
		{
			get
			{
				return this.GetTable<tbl_CAT_Moneda>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_Nacionalidad> tbl_CAT_Nacionalidad
		{
			get
			{
				return this.GetTable<tbl_CAT_Nacionalidad>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_TipoDomicilio> tbl_CAT_TipoDomicilio
		{
			get
			{
				return this.GetTable<tbl_CAT_TipoDomicilio>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_TipoPersona> tbl_CAT_TipoPersona
		{
			get
			{
				return this.GetTable<tbl_CAT_TipoPersona>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_EstuausSeguimiento> tbl_CAT_EstuausSeguimiento
		{
			get
			{
				return this.GetTable<tbl_CAT_EstuausSeguimiento>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CAT_TipoProducto> tbl_CAT_TipoProducto
		{
			get
			{
				return this.GetTable<tbl_CAT_TipoProducto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_Estado")]
	public partial class tbl_CAT_Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintEstadoID;
		
		private string _vchClave;
		
		private string _vchDescripcion;
		
		private EntitySet<tbl_CAT_Localidades> _tbl_CAT_Localidades;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintEstadoIDChanging(short value);
    partial void OnsintEstadoIDChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    #endregion
		
		public tbl_CAT_Estado()
		{
			this._tbl_CAT_Localidades = new EntitySet<tbl_CAT_Localidades>(new Action<tbl_CAT_Localidades>(this.attach_tbl_CAT_Localidades), new Action<tbl_CAT_Localidades>(this.detach_tbl_CAT_Localidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintEstadoID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintEstadoID
		{
			get
			{
				return this._sintEstadoID;
			}
			set
			{
				if ((this._sintEstadoID != value))
				{
					this.OnsintEstadoIDChanging(value);
					this.SendPropertyChanging();
					this._sintEstadoID = value;
					this.SendPropertyChanged("sintEstadoID");
					this.OnsintEstadoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(10)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(250)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_CAT_Estado_tbl_CAT_Localidades", Storage="_tbl_CAT_Localidades", ThisKey="sintEstadoID", OtherKey="sintEstadoID")]
		public EntitySet<tbl_CAT_Localidades> tbl_CAT_Localidades
		{
			get
			{
				return this._tbl_CAT_Localidades;
			}
			set
			{
				this._tbl_CAT_Localidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_CAT_Localidades(tbl_CAT_Localidades entity)
		{
			this.SendPropertyChanging();
			entity.tbl_CAT_Estado = this;
		}
		
		private void detach_tbl_CAT_Localidades(tbl_CAT_Localidades entity)
		{
			this.SendPropertyChanging();
			entity.tbl_CAT_Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_Actividad")]
	public partial class tbl_CAT_Actividad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintActividadID;
		
		private string _vchClave;
		
		private string _vchDescripcion;
		
		private System.Nullable<short> _sintPuntaje;
		
		private System.Nullable<bool> _bitEstatus;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintActividadIDChanging(short value);
    partial void OnsintActividadIDChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    partial void OnsintPuntajeChanging(System.Nullable<short> value);
    partial void OnsintPuntajeChanged();
    partial void OnbitEstatusChanging(System.Nullable<bool> value);
    partial void OnbitEstatusChanged();
    #endregion
		
		public tbl_CAT_Actividad()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintActividadID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintActividadID
		{
			get
			{
				return this._sintActividadID;
			}
			set
			{
				if ((this._sintActividadID != value))
				{
					this.OnsintActividadIDChanging(value);
					this.SendPropertyChanging();
					this._sintActividadID = value;
					this.SendPropertyChanged("sintActividadID");
					this.OnsintActividadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(10)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(250)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintPuntaje", DbType="SmallInt")]
		public System.Nullable<short> sintPuntaje
		{
			get
			{
				return this._sintPuntaje;
			}
			set
			{
				if ((this._sintPuntaje != value))
				{
					this.OnsintPuntajeChanging(value);
					this.SendPropertyChanging();
					this._sintPuntaje = value;
					this.SendPropertyChanged("sintPuntaje");
					this.OnsintPuntajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitEstatus", DbType="Bit")]
		public System.Nullable<bool> bitEstatus
		{
			get
			{
				return this._bitEstatus;
			}
			set
			{
				if ((this._bitEstatus != value))
				{
					this.OnbitEstatusChanging(value);
					this.SendPropertyChanging();
					this._bitEstatus = value;
					this.SendPropertyChanged("bitEstatus");
					this.OnbitEstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_Localidades")]
	public partial class tbl_CAT_Localidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintLocalidadID;
		
		private System.Nullable<short> _sintEstadoID;
		
		private string _vchClave;
		
		private string _vchDescripcion;
		
		private EntityRef<tbl_CAT_Estado> _tbl_CAT_Estado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintLocalidadIDChanging(short value);
    partial void OnsintLocalidadIDChanged();
    partial void OnsintEstadoIDChanging(System.Nullable<short> value);
    partial void OnsintEstadoIDChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    #endregion
		
		public tbl_CAT_Localidades()
		{
			this._tbl_CAT_Estado = default(EntityRef<tbl_CAT_Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintLocalidadID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintLocalidadID
		{
			get
			{
				return this._sintLocalidadID;
			}
			set
			{
				if ((this._sintLocalidadID != value))
				{
					this.OnsintLocalidadIDChanging(value);
					this.SendPropertyChanging();
					this._sintLocalidadID = value;
					this.SendPropertyChanged("sintLocalidadID");
					this.OnsintLocalidadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintEstadoID", DbType="SmallInt")]
		public System.Nullable<short> sintEstadoID
		{
			get
			{
				return this._sintEstadoID;
			}
			set
			{
				if ((this._sintEstadoID != value))
				{
					if (this._tbl_CAT_Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsintEstadoIDChanging(value);
					this.SendPropertyChanging();
					this._sintEstadoID = value;
					this.SendPropertyChanged("sintEstadoID");
					this.OnsintEstadoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(10)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(50)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_CAT_Estado_tbl_CAT_Localidades", Storage="_tbl_CAT_Estado", ThisKey="sintEstadoID", OtherKey="sintEstadoID", IsForeignKey=true)]
		public tbl_CAT_Estado tbl_CAT_Estado
		{
			get
			{
				return this._tbl_CAT_Estado.Entity;
			}
			set
			{
				tbl_CAT_Estado previousValue = this._tbl_CAT_Estado.Entity;
				if (((previousValue != value) 
							|| (this._tbl_CAT_Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_CAT_Estado.Entity = null;
						previousValue.tbl_CAT_Localidades.Remove(this);
					}
					this._tbl_CAT_Estado.Entity = value;
					if ((value != null))
					{
						value.tbl_CAT_Localidades.Add(this);
						this._sintEstadoID = value.sintEstadoID;
					}
					else
					{
						this._sintEstadoID = default(Nullable<short>);
					}
					this.SendPropertyChanged("tbl_CAT_Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_Moneda")]
	public partial class tbl_CAT_Moneda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintMonedaID;
		
		private string _vchClave;
		
		private string _vchDescripcion;
		
		private string _vchPais;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintMonedaIDChanging(short value);
    partial void OnsintMonedaIDChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    partial void OnvchPaisChanging(string value);
    partial void OnvchPaisChanged();
    #endregion
		
		public tbl_CAT_Moneda()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintMonedaID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintMonedaID
		{
			get
			{
				return this._sintMonedaID;
			}
			set
			{
				if ((this._sintMonedaID != value))
				{
					this.OnsintMonedaIDChanging(value);
					this.SendPropertyChanging();
					this._sintMonedaID = value;
					this.SendPropertyChanged("sintMonedaID");
					this.OnsintMonedaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(20)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(150)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchPais", DbType="VarChar(100)")]
		public string vchPais
		{
			get
			{
				return this._vchPais;
			}
			set
			{
				if ((this._vchPais != value))
				{
					this.OnvchPaisChanging(value);
					this.SendPropertyChanging();
					this._vchPais = value;
					this.SendPropertyChanged("vchPais");
					this.OnvchPaisChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_Nacionalidad")]
	public partial class tbl_CAT_Nacionalidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintNacionalidadID;
		
		private string _vchDescripcion;
		
		private string _vchClave;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintNacionalidadIDChanging(short value);
    partial void OnsintNacionalidadIDChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    #endregion
		
		public tbl_CAT_Nacionalidad()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintNacionalidadID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintNacionalidadID
		{
			get
			{
				return this._sintNacionalidadID;
			}
			set
			{
				if ((this._sintNacionalidadID != value))
				{
					this.OnsintNacionalidadIDChanging(value);
					this.SendPropertyChanging();
					this._sintNacionalidadID = value;
					this.SendPropertyChanged("sintNacionalidadID");
					this.OnsintNacionalidadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(20)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(10)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_TipoDomicilio")]
	public partial class tbl_CAT_TipoDomicilio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintTipoDomicilioID;
		
		private string _vchClave;
		
		private string _vchDescripcion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintTipoDomicilioIDChanging(short value);
    partial void OnsintTipoDomicilioIDChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    #endregion
		
		public tbl_CAT_TipoDomicilio()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintTipoDomicilioID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintTipoDomicilioID
		{
			get
			{
				return this._sintTipoDomicilioID;
			}
			set
			{
				if ((this._sintTipoDomicilioID != value))
				{
					this.OnsintTipoDomicilioIDChanging(value);
					this.SendPropertyChanging();
					this._sintTipoDomicilioID = value;
					this.SendPropertyChanged("sintTipoDomicilioID");
					this.OnsintTipoDomicilioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(10)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(100)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_TipoPersona")]
	public partial class tbl_CAT_TipoPersona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintTipoPersonaID;
		
		private string _vchDescripcion;
		
		private string _vchClave;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintTipoPersonaIDChanging(short value);
    partial void OnsintTipoPersonaIDChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    #endregion
		
		public tbl_CAT_TipoPersona()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintTipoPersonaID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintTipoPersonaID
		{
			get
			{
				return this._sintTipoPersonaID;
			}
			set
			{
				if ((this._sintTipoPersonaID != value))
				{
					this.OnsintTipoPersonaIDChanging(value);
					this.SendPropertyChanging();
					this._sintTipoPersonaID = value;
					this.SendPropertyChanged("sintTipoPersonaID");
					this.OnsintTipoPersonaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(20)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(5)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_EstuausSeguimiento")]
	public partial class tbl_CAT_EstuausSeguimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintEstatusSeguimientoID;
		
		private string _vchDescripcion;
		
		private string _vchObservaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintEstatusSeguimientoIDChanging(short value);
    partial void OnsintEstatusSeguimientoIDChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    partial void OnvchObservacionesChanging(string value);
    partial void OnvchObservacionesChanged();
    #endregion
		
		public tbl_CAT_EstuausSeguimiento()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintEstatusSeguimientoID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintEstatusSeguimientoID
		{
			get
			{
				return this._sintEstatusSeguimientoID;
			}
			set
			{
				if ((this._sintEstatusSeguimientoID != value))
				{
					this.OnsintEstatusSeguimientoIDChanging(value);
					this.SendPropertyChanging();
					this._sintEstatusSeguimientoID = value;
					this.SendPropertyChanged("sintEstatusSeguimientoID");
					this.OnsintEstatusSeguimientoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(50)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchObservaciones", DbType="VarChar(500)")]
		public string vchObservaciones
		{
			get
			{
				return this._vchObservaciones;
			}
			set
			{
				if ((this._vchObservaciones != value))
				{
					this.OnvchObservacionesChanging(value);
					this.SendPropertyChanging();
					this._vchObservaciones = value;
					this.SendPropertyChanged("vchObservaciones");
					this.OnvchObservacionesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CAT_TipoProducto")]
	public partial class tbl_CAT_TipoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _sintTipoProductoID;
		
		private string _vchClave;
		
		private string _vchDescripcion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsintTipoProductoIDChanging(short value);
    partial void OnsintTipoProductoIDChanged();
    partial void OnvchClaveChanging(string value);
    partial void OnvchClaveChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    #endregion
		
		public tbl_CAT_TipoProducto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintTipoProductoID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short sintTipoProductoID
		{
			get
			{
				return this._sintTipoProductoID;
			}
			set
			{
				if ((this._sintTipoProductoID != value))
				{
					this.OnsintTipoProductoIDChanging(value);
					this.SendPropertyChanging();
					this._sintTipoProductoID = value;
					this.SendPropertyChanged("sintTipoProductoID");
					this.OnsintTipoProductoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchClave", DbType="VarChar(20)")]
		public string vchClave
		{
			get
			{
				return this._vchClave;
			}
			set
			{
				if ((this._vchClave != value))
				{
					this.OnvchClaveChanging(value);
					this.SendPropertyChanging();
					this._vchClave = value;
					this.SendPropertyChanged("vchClave");
					this.OnvchClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(20)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
