#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PLD.DataAccess.Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbSmartPLD")]
	public partial class ComunDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Inserttbl_LOG_Error(tbl_LOG_Error instance);
    partial void Updatetbl_LOG_Error(tbl_LOG_Error instance);
    partial void Deletetbl_LOG_Error(tbl_LOG_Error instance);
    partial void Inserttbl_LOG_Carga(tbl_LOG_Carga instance);
    partial void Updatetbl_LOG_Carga(tbl_LOG_Carga instance);
    partial void Deletetbl_LOG_Carga(tbl_LOG_Carga instance);
    #endregion
		
		public ComunDataContext() : 
				base(global::PLD.DataAccess.Properties.Settings.Default.dbSmartPLDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ComunDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComunDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComunDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComunDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_LOG_Error> tbl_LOG_Error
		{
			get
			{
				return this.GetTable<tbl_LOG_Error>();
			}
		}
		
		public System.Data.Linq.Table<tbl_LOG_Carga> tbl_LOG_Carga
		{
			get
			{
				return this.GetTable<tbl_LOG_Carga>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.stp_CargaInformacion")]
		public int stp_CargaInformacion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string vchUsuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string vchMensaje, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] ref System.Nullable<short> sintError)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vchUsuario, vchMensaje, sintError);
			vchMensaje = ((string)(result.GetParameterValue(1)));
			sintError = ((System.Nullable<short>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_LOG_Error")]
	public partial class tbl_LOG_Error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intErrorID;
		
		private string _vchMensaje;
		
		private string _vchHostName;
		
		private string _vchIP;
		
		private string _vchStakeTrace;
		
		private string _vchParametros;
		
		private System.Nullable<System.DateTime> _datFechaError;
		
		private string _vchUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintErrorIDChanging(int value);
    partial void OnintErrorIDChanged();
    partial void OnvchMensajeChanging(string value);
    partial void OnvchMensajeChanged();
    partial void OnvchHostNameChanging(string value);
    partial void OnvchHostNameChanged();
    partial void OnvchIPChanging(string value);
    partial void OnvchIPChanged();
    partial void OnvchStakeTraceChanging(string value);
    partial void OnvchStakeTraceChanged();
    partial void OnvchParametrosChanging(string value);
    partial void OnvchParametrosChanged();
    partial void OndatFechaErrorChanging(System.Nullable<System.DateTime> value);
    partial void OndatFechaErrorChanged();
    partial void OnvchUsuarioChanging(string value);
    partial void OnvchUsuarioChanged();
    #endregion
		
		public tbl_LOG_Error()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intErrorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int intErrorID
		{
			get
			{
				return this._intErrorID;
			}
			set
			{
				if ((this._intErrorID != value))
				{
					this.OnintErrorIDChanging(value);
					this.SendPropertyChanging();
					this._intErrorID = value;
					this.SendPropertyChanged("intErrorID");
					this.OnintErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchMensaje", DbType="VarChar(8000)")]
		public string vchMensaje
		{
			get
			{
				return this._vchMensaje;
			}
			set
			{
				if ((this._vchMensaje != value))
				{
					this.OnvchMensajeChanging(value);
					this.SendPropertyChanging();
					this._vchMensaje = value;
					this.SendPropertyChanged("vchMensaje");
					this.OnvchMensajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchHostName", DbType="VarChar(100)")]
		public string vchHostName
		{
			get
			{
				return this._vchHostName;
			}
			set
			{
				if ((this._vchHostName != value))
				{
					this.OnvchHostNameChanging(value);
					this.SendPropertyChanging();
					this._vchHostName = value;
					this.SendPropertyChanged("vchHostName");
					this.OnvchHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchIP", DbType="VarChar(100)")]
		public string vchIP
		{
			get
			{
				return this._vchIP;
			}
			set
			{
				if ((this._vchIP != value))
				{
					this.OnvchIPChanging(value);
					this.SendPropertyChanging();
					this._vchIP = value;
					this.SendPropertyChanged("vchIP");
					this.OnvchIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchStakeTrace", DbType="VarChar(8000)")]
		public string vchStakeTrace
		{
			get
			{
				return this._vchStakeTrace;
			}
			set
			{
				if ((this._vchStakeTrace != value))
				{
					this.OnvchStakeTraceChanging(value);
					this.SendPropertyChanging();
					this._vchStakeTrace = value;
					this.SendPropertyChanged("vchStakeTrace");
					this.OnvchStakeTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchParametros", DbType="VarChar(8000)")]
		public string vchParametros
		{
			get
			{
				return this._vchParametros;
			}
			set
			{
				if ((this._vchParametros != value))
				{
					this.OnvchParametrosChanging(value);
					this.SendPropertyChanging();
					this._vchParametros = value;
					this.SendPropertyChanged("vchParametros");
					this.OnvchParametrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datFechaError", DbType="Date")]
		public System.Nullable<System.DateTime> datFechaError
		{
			get
			{
				return this._datFechaError;
			}
			set
			{
				if ((this._datFechaError != value))
				{
					this.OndatFechaErrorChanging(value);
					this.SendPropertyChanging();
					this._datFechaError = value;
					this.SendPropertyChanged("datFechaError");
					this.OndatFechaErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchUsuario", DbType="VarChar(30)")]
		public string vchUsuario
		{
			get
			{
				return this._vchUsuario;
			}
			set
			{
				if ((this._vchUsuario != value))
				{
					this.OnvchUsuarioChanging(value);
					this.SendPropertyChanging();
					this._vchUsuario = value;
					this.SendPropertyChanged("vchUsuario");
					this.OnvchUsuarioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_LOG_Carga")]
	public partial class tbl_LOG_Carga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _intLogID;
		
		private string _vchDescripcion;
		
		private string _vchParametros;
		
		private System.Nullable<short> _sintNoError;
		
		private System.Nullable<short> _sintNoExito;
		
		private string _vchXMLError;
		
		private string _vchUsuario;
		
		private System.Nullable<System.DateTime> _sdatFecha;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnintLogIDChanging(int value);
    partial void OnintLogIDChanged();
    partial void OnvchDescripcionChanging(string value);
    partial void OnvchDescripcionChanged();
    partial void OnvchParametrosChanging(string value);
    partial void OnvchParametrosChanged();
    partial void OnsintNoErrorChanging(System.Nullable<short> value);
    partial void OnsintNoErrorChanged();
    partial void OnsintNoExitoChanging(System.Nullable<short> value);
    partial void OnsintNoExitoChanged();
    partial void OnvchXMLErrorChanging(string value);
    partial void OnvchXMLErrorChanged();
    partial void OnvchUsuarioChanging(string value);
    partial void OnvchUsuarioChanged();
    partial void OnsdatFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnsdatFechaChanged();
    #endregion
		
		public tbl_LOG_Carga()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int intLogID
		{
			get
			{
				return this._intLogID;
			}
			set
			{
				if ((this._intLogID != value))
				{
					this.OnintLogIDChanging(value);
					this.SendPropertyChanging();
					this._intLogID = value;
					this.SendPropertyChanged("intLogID");
					this.OnintLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchDescripcion", DbType="VarChar(300)")]
		public string vchDescripcion
		{
			get
			{
				return this._vchDescripcion;
			}
			set
			{
				if ((this._vchDescripcion != value))
				{
					this.OnvchDescripcionChanging(value);
					this.SendPropertyChanging();
					this._vchDescripcion = value;
					this.SendPropertyChanged("vchDescripcion");
					this.OnvchDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchParametros", DbType="VarChar(1000)")]
		public string vchParametros
		{
			get
			{
				return this._vchParametros;
			}
			set
			{
				if ((this._vchParametros != value))
				{
					this.OnvchParametrosChanging(value);
					this.SendPropertyChanging();
					this._vchParametros = value;
					this.SendPropertyChanged("vchParametros");
					this.OnvchParametrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintNoError", DbType="SmallInt")]
		public System.Nullable<short> sintNoError
		{
			get
			{
				return this._sintNoError;
			}
			set
			{
				if ((this._sintNoError != value))
				{
					this.OnsintNoErrorChanging(value);
					this.SendPropertyChanging();
					this._sintNoError = value;
					this.SendPropertyChanged("sintNoError");
					this.OnsintNoErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sintNoExito", DbType="SmallInt")]
		public System.Nullable<short> sintNoExito
		{
			get
			{
				return this._sintNoExito;
			}
			set
			{
				if ((this._sintNoExito != value))
				{
					this.OnsintNoExitoChanging(value);
					this.SendPropertyChanging();
					this._sintNoExito = value;
					this.SendPropertyChanged("sintNoExito");
					this.OnsintNoExitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchXMLError", DbType="VarChar(8000)")]
		public string vchXMLError
		{
			get
			{
				return this._vchXMLError;
			}
			set
			{
				if ((this._vchXMLError != value))
				{
					this.OnvchXMLErrorChanging(value);
					this.SendPropertyChanging();
					this._vchXMLError = value;
					this.SendPropertyChanged("vchXMLError");
					this.OnvchXMLErrorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vchUsuario", DbType="VarChar(30)")]
		public string vchUsuario
		{
			get
			{
				return this._vchUsuario;
			}
			set
			{
				if ((this._vchUsuario != value))
				{
					this.OnvchUsuarioChanging(value);
					this.SendPropertyChanging();
					this._vchUsuario = value;
					this.SendPropertyChanged("vchUsuario");
					this.OnvchUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdatFecha", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> sdatFecha
		{
			get
			{
				return this._sdatFecha;
			}
			set
			{
				if ((this._sdatFecha != value))
				{
					this.OnsdatFechaChanging(value);
					this.SendPropertyChanging();
					this._sdatFecha = value;
					this.SendPropertyChanged("sdatFecha");
					this.OnsdatFechaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
